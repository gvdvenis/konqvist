@page "/login"
@page "/login/{Password}"

@using System.Security.Claims
@using ElectionGame.Web.State
@using Microsoft.AspNetCore.Authentication.Cookies

@inject NavigationManager NavigationManager

<h3>Please scan the QR-code to login</h3>

@code {
    [CascadingParameter] HttpContext? HttpContext { get; set; }
    [Parameter] public string? Password { get; set; }

    #region Overrides of ComponentBase

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        
        if (Password is not null)
            await TryLogin();
    }

    #endregion

    private async Task TryLogin()
    {

        if (HttpContext is null || VerifyPassword() is not { } loginuser)
        {
            NavigationManager.NavigateTo("/access-denied");
            return;
        }

        var claims = new List<Claim>
        {
            new(ClaimTypes.Name, loginuser.Name),
            new(ClaimTypes.Role, loginuser.Role.ToString()),
            new(ClaimTypes.UserData, loginuser.TeamName),
            new(ClaimTypes.NameIdentifier, loginuser.TeamName)
        };

        var identity = new ClaimsIdentity(claims, CookieAuthenticationDefaults.AuthenticationScheme);
        var principal = new ClaimsPrincipal(identity);
        await HttpContext.SignInAsync(principal);

        NavigationManager.NavigateTo("/map");
    }

    private User? VerifyPassword()
    { 
        return Password switch
        {
            "b" => new User("Gert", Password, Role.Admin, "Bravo"),
            "c" => new User("John", Password, Role.Player, "Charly"),
            "d" => new User("Jane", Password, Role.TeamLeader, "Delta"),
            _ => null
        };
    }

}
