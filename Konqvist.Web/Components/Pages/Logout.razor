@page "/logout"

@inject NavigationManager NavigationManager
@inject IBindableHubClient HubClient
@inject SessionProvider SessionProvider

@attribute [Authorize]

<h3>You've successfully logged out. Thank you for playing.</h3>

@code {

    [CascadingParameter] HttpContext? HttpContext { get; set; }

    #region Overrides of ComponentBase

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var session = await SessionProvider.SessionAsync;

        if (HttpContext is not { } ctx) return;

        if (ctx.User.Identity is { IsAuthenticated: true })
        {

            if (session.IsPlayer)
            {
                await HubClient.SendRunnerLogoutRequest(session.TeamName);
            } 

            await HttpContext.SignOutAsync();
            
            SessionProvider.ClearSession();

            NavigationManager.NavigateTo("/login", true);
        }
    }

    #endregion

}
