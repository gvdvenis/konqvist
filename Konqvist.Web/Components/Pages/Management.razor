@page "/management"
@using Konqvist.Web.Models
@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject MapDataStore MapDataStore
@inject IBindableHubClient HubClient

@attribute [AuthorizeGameRoles(GameRole.GameMaster)]

@* 
    <FluentStack Orientation="Orientation.Horizontal"
             VerticalGap="5"
             HorizontalGap="5">
    </FluentStack>
 *@    
    <div class="card-grid">
        @foreach (var team in _teams)
    {
        <TeamCard Team="@team"/>
    }
</div>

@code {

    private IEnumerable<Team> _teams = [];

    public string TeamName { get; set; } = "";

    #region Overrides of ComponentBase

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var teamsData = await MapDataStore.GetTeams();
        _teams = teamsData.Select(Team.CreateFromDataOrEmtpy).Reverse();
        HubClient.OnRunnerLoggedInOrOut += OnRunnerLoggedInOrOut;
        HubClient.OnDistrictOwnerChanged += OnDistrictOwnerChanged;
    }

    private Task OnDistrictOwnerChanged(DistrictOwner arg)
    {
        return InvokeAsync(StateHasChanged);
        //return Task.CompletedTask;

    }

    private Task OnRunnerLoggedInOrOut()
    {
        return InvokeAsync(StateHasChanged);
        //return Task.CompletedTask;
    }

    #endregion

}
