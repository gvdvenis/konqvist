@using Konqvist.Web.Services

@inject NavigationManager Navigation
@inject GameModeRoutingService GameModeRoutingService
@inject SessionProvider SessionProvider

<Router AppAssembly="typeof(Program).Assembly" OnNavigateAsync="OnNavigate">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)"  />
        <FocusOnNavigate RouteData="routeData" Selector="h1" />
    </Found>
</Router>

@code
{
    private async Task OnNavigate(NavigationContext args)
    {
        if (GameModeRoutingService is null) return;

        var authenticated = SessionProvider.Session.IsAuthenticated;

        // Validate the route using the routing rules
        var validationResult = await GameModeRoutingService.ValidateRoute(args.Path);

        if (!string.IsNullOrWhiteSpace(validationResult.RedirectPage) && !validationResult.RedirectPage.Equals(args.Path, StringComparison.OrdinalIgnoreCase))
        {
            // Redirect to the appropriate page
            Navigation.NavigateTo(validationResult.RedirectPage);
            return;
        }

        // Otherwise, allow navigation
    }
}