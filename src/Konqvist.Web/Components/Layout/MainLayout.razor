@using Microsoft.FluentUI.AspNetCore.Components.Utilities
@inherits LayoutComponentBase
@inject MapDataStore MapDataStore

<FluentDesignTheme StorageName="theme" Mode="DesignThemeModes.Dark" >
    <FluentLayout Orientation="Orientation.Vertical">
        <FluentHeader @ref="_fluentHeader" style="@StyleValue">
            @if (UserSession.IsAuthenticated)
            {
                @UserSession.TeamName
                <FluentSpacer />
                <img src="/icons/konqvist-logo-light.svg" height="38" alt="KonqVist Logo" />
                <FluentSpacer />
                <FluentIcon Color="Color.Custom" CustomColor="#ffffff" Width="30px" Style="margin-left:10px; font-weight:bolder" Value="UserSession.Icon" />
            }
            else
            {
                <FluentSpacer />
                <img src="/icons/konqvist-logo-light.svg" height="42" alt="KonqVist Logo" />
                <FluentSpacer />
            }
        </FluentHeader>

        <FluentBodyContent>
            <FluentMessageBarProvider Section="MESSAGES_TOP" MaxMessageCount="1" Style="padding: 1rem 1rem 0 1rem; width: 100%;" />
            @Body
        </FluentBodyContent>

        <FluentFooter>
            <SectionOutlet SectionName="FooterContentSection" />
        </FluentFooter>

        <FluentDialogProvider />
        <FluentToastProvider MaxToastCount="3"
                             RemoveToastsOnNavigation="false"
                             Position="ToastPosition.BottomCenter"
                             Timeout="5000"/>
    </FluentLayout>
</FluentDesignTheme>

<div id="blazor-error-ui" data-nosnippet style="color: var(--neutral-fill-rest);">
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private FluentHeader? _fluentHeader;
    private TeamData _currentTeam = TeamData.Empty;

    [CascadingParameter] Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    private UserSession UserSession { get; set; } = UserSession.Empty;

    private string? StyleValue => new StyleBuilder(_fluentHeader?.Style)
        .AddStyle("background-color", _currentTeam.Color)
        .AddStyle("color", "#ffffff")
        .Build();

    #region Overrides of ComponentBase

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // we should not be able to reach this page without being authorized
        ArgumentNullException.ThrowIfNull(AuthenticationStateTask);

        UserSession = await UserSession.CreateFromAuthenticationState(AuthenticationStateTask);

        _currentTeam = await MapDataStore.GetTeamByName(UserSession.TeamName);
    }


    #endregion

}